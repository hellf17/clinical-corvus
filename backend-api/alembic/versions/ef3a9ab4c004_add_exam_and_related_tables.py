"""add_exam_and_related_tables

Revision ID: ef3a9ab4c004
Revises: b42eb834a063
Create Date: 2025-09-04 03:10:57.088138

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ef3a9ab4c004'
down_revision: Union[str, None] = 'b42eb834a063'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group_invitations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('invited_by_user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('accepted_at', sa.DateTime(), nullable=True),
    sa.Column('declined_at', sa.DateTime(), nullable=True),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['invited_by_user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_invitations_email'), 'group_invitations', ['email'], unique=False)
    op.create_index(op.f('ix_group_invitations_group_id'), 'group_invitations', ['group_id'], unique=False)
    op.create_index(op.f('ix_group_invitations_id'), 'group_invitations', ['id'], unique=False)
    op.create_index(op.f('ix_group_invitations_invited_by_user_id'), 'group_invitations', ['invited_by_user_id'], unique=False)
    op.create_index(op.f('ix_group_invitations_token'), 'group_invitations', ['token'], unique=True)
    op.create_table('exams',
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('exam_timestamp', sa.DateTime(), nullable=False),
    sa.Column('upload_timestamp', sa.DateTime(), nullable=True),
    sa.Column('exam_type', sa.String(length=100), nullable=True),
    sa.Column('source_file_name', sa.String(length=255), nullable=True),
    sa.Column('source_file_path', sa.String(length=512), nullable=True),
    sa.Column('processing_status', sa.Enum('PENDING', 'PROCESSING', 'PROCESSED', 'ERROR', name='examstatus'), nullable=False),
    sa.Column('processing_log', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('exam_id')
    )
    op.create_index(op.f('ix_exams_exam_id'), 'exams', ['exam_id'], unique=False)
    op.create_index(op.f('ix_exams_exam_timestamp'), 'exams', ['exam_timestamp'], unique=False)
    op.create_table('vital_signs',
    sa.Column('vital_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('temperature_c', sa.Float(), nullable=True),
    sa.Column('heart_rate', sa.Integer(), nullable=True),
    sa.Column('respiratory_rate', sa.Integer(), nullable=True),
    sa.Column('systolic_bp', sa.Integer(), nullable=True),
    sa.Column('diastolic_bp', sa.Integer(), nullable=True),
    sa.Column('oxygen_saturation', sa.Float(), nullable=True),
    sa.Column('glasgow_coma_scale', sa.Integer(), nullable=True),
    sa.Column('fio2_input', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.PrimaryKeyConstraint('vital_id')
    )
    op.create_index(op.f('ix_vital_signs_timestamp'), 'vital_signs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_vital_signs_vital_id'), 'vital_signs', ['vital_id'], unique=False)
    op.create_index(op.f('ix_group_memberships_group_id'), 'group_memberships', ['group_id'], unique=False)
    op.create_index(op.f('ix_group_memberships_invited_by'), 'group_memberships', ['invited_by'], unique=False)
    op.create_index(op.f('ix_group_memberships_user_id'), 'group_memberships', ['user_id'], unique=False)
    op.create_index(op.f('ix_group_patients_assigned_by'), 'group_patients', ['assigned_by'], unique=False)
    op.create_index(op.f('ix_group_patients_group_id'), 'group_patients', ['group_id'], unique=False)
    op.create_index(op.f('ix_group_patients_patient_id'), 'group_patients', ['patient_id'], unique=False)
    op.drop_index(op.f('ix_groups_name'), table_name='groups')
    op.create_unique_constraint(None, 'groups', ['name'])
    op.add_column('lab_results', sa.Column('exam_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_lab_results_exam_id'), 'lab_results', ['exam_id'], unique=False)
    op.create_foreign_key(None, 'lab_results', 'exams', ['exam_id'], ['exam_id'])
    op.drop_constraint(op.f('uq_patients_user_id'), 'patients', type_='unique')
    op.drop_column('patients', 'age')
    op.drop_column('patients', 'medications')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('patients', sa.Column('medications', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('patients', sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_unique_constraint(op.f('uq_patients_user_id'), 'patients', ['user_id'])
    op.drop_constraint(None, 'lab_results', type_='foreignkey')
    op.drop_index(op.f('ix_lab_results_exam_id'), table_name='lab_results')
    op.drop_column('lab_results', 'exam_id')
    op.drop_constraint(None, 'groups', type_='unique')
    op.create_index(op.f('ix_groups_name'), 'groups', ['name'], unique=True)
    op.drop_index(op.f('ix_group_patients_patient_id'), table_name='group_patients')
    op.drop_index(op.f('ix_group_patients_group_id'), table_name='group_patients')
    op.drop_index(op.f('ix_group_patients_assigned_by'), table_name='group_patients')
    op.drop_index(op.f('ix_group_memberships_user_id'), table_name='group_memberships')
    op.drop_index(op.f('ix_group_memberships_invited_by'), table_name='group_memberships')
    op.drop_index(op.f('ix_group_memberships_group_id'), table_name='group_memberships')
    op.drop_index(op.f('ix_vital_signs_vital_id'), table_name='vital_signs')
    op.drop_index(op.f('ix_vital_signs_timestamp'), table_name='vital_signs')
    op.drop_table('vital_signs')
    op.drop_index(op.f('ix_exams_exam_timestamp'), table_name='exams')
    op.drop_index(op.f('ix_exams_exam_id'), table_name='exams')
    op.drop_table('exams')
    op.drop_index(op.f('ix_group_invitations_token'), table_name='group_invitations')
    op.drop_index(op.f('ix_group_invitations_invited_by_user_id'), table_name='group_invitations')
    op.drop_index(op.f('ix_group_invitations_id'), table_name='group_invitations')
    op.drop_index(op.f('ix_group_invitations_group_id'), table_name='group_invitations')
    op.drop_index(op.f('ix_group_invitations_email'), table_name='group_invitations')
    op.drop_table('group_invitations')
    # ### end Alembic commands ###
