FROM python:3.10-slim AS builder

WORKDIR /app

# Instalar dependências do sistema para build incluindo git para dependências do GitHub
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copiar arquivos de dependências (a ordem importa!)
COPY requirements-shared.txt .
COPY mcp_server/requirements.txt ./mcp-requirements.txt

# Copiar o cliente BAML para o contexto do builder
COPY baml_client /app/baml_client_temp

# Criar e ativar ambiente virtual
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Instalar primeiro as dependências compartilhadas, depois as específicas
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-shared.txt && \
    pip install --no-cache-dir -r mcp-requirements.txt

# Segunda etapa: imagem final
FROM python:3.10-slim

WORKDIR /app

# Copiar ambiente virtual da etapa de build
COPY --from=builder /opt/venv /opt/venv

# Configurar PATH para usar o ambiente virtual
ENV PATH="/opt/venv/bin:$PATH"

# Instalar dependências mínimas para runtime
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copiar código da aplicação
COPY mcp_server/ .

# Copiar o cliente BAML da raiz do projeto para o diretório /app
COPY --from=builder /app/baml_client_temp /app/baml_client

# Definir porta padrão como 8765 (corrigindo inconsistência)
ENV MCP_PORT=8765
EXPOSE 8765

# Variáveis de ambiente para produção
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1
# Adicionar healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8765/health || exit 1

# Comando para iniciar o servidor
CMD ["python", "mcp_server.py"] 