# Optimized Development Dockerfile for MCP Server
# Uses a multi-stage build to create a lean final image and leverages layer caching.

# --- Base Stage ---
FROM python:3.10-slim as base
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=100

# --- Builder Stage ---
FROM base as builder
WORKDIR /app

# Install minimal system dependencies.
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create a virtual environment.
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip.
RUN pip install --upgrade pip

# Copy requirements files to leverage Docker cache.
COPY mcp_server/requirements.txt .
COPY mcp_server/requirements-local.txt .
# The requirements-local.txt file expects requirements-shared.txt to be in the parent directory.
COPY requirements-shared.txt ../

# Install all dependencies in a single, cached layer.
RUN pip install -r requirements-local.txt

# --- Development Stage ---
FROM builder as development
WORKDIR /app

# Copy application code last.
COPY mcp_server/ .
COPY baml_client/ /app/baml_client

# Create a non-root user.
RUN useradd -m -u 1000 developer && chown -R developer:developer /app
USER developer

EXPOSE 8001 5678

HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

CMD ["uvicorn", "mcp_server:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]